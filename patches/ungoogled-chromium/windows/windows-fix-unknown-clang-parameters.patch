# The "-no-opaque-pointers" and "-ffile-reproducible" commandline parameters has been added by clang-15. Once clang-15 is available for windows, this patch can be removed.

--- a/base/location.cc
+++ b/base/location.cc
@@ -73,7 +73,7 @@ constexpr bool StrEndsWith(const char* n
   return true;
 }
 
-#if defined(__clang__) && defined(_MSC_VER)
+#if 0
 static_assert(StrEndsWith(__FILE__, kStrippedPrefixLength, "base\\location.cc"),
               "The file name does not match the expected prefix format.");
 #else
--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -1420,10 +1420,6 @@ config("default_warnings") {
     if (treat_warnings_as_errors) {
       cflags += [ "/WX" ]
     }
-    if (fatal_linker_warnings) {
-      arflags = [ "/WX" ]
-      ldflags = [ "/WX" ]
-    }
     defines = [
       # Without this, Windows headers warn that functions like wcsnicmp
       # should be spelled _wcsnicmp. But all other platforms keep spelling
@@ -1544,8 +1540,6 @@ config("default_warnings") {
                         default_toolchain == "//build/toolchain/cros:target")) {
         # TODO(https://crbug.com/1322823): Remove flags once potential miscompile is investigated.
         cflags += [
-          "-Xclang",
-          "-no-opaque-pointers",
         ]
       }
 
--- a/build/config/win/BUILD.gn
+++ b/build/config/win/BUILD.gn
@@ -78,7 +78,7 @@ config("compiler") {
       # Consistently use backslash as the path separator when expanding the
       # __FILE__ macro when targeting Windows regardless of the build
       # environment.
-      "-ffile-reproducible",
+      #"-ffile-reproducible",
     ]
   }
 
